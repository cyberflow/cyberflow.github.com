<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cyberflow</title>
    <description>My Personal Blog</description>
    <link>https://cyberflow.net/</link>
    <atom:link href="https://cyberflow.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 19 Jun 2016 11:05:44 +0000</pubDate>
    <lastBuildDate>Sun, 19 Jun 2016 11:05:44 +0000</lastBuildDate>
    <generator>Jekyll v3.0.3</generator>
    
      <item>
        <title>Миграция старых indices elasticsearch на другую ноду</title>
        <description>&lt;p&gt;Я использую &lt;code class=&quot;highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt; для централизованного хранения логов с серверов. Логов хранится много и каждый новый индекс ест ресурсы на сервере (статью об оптимизации используемых ресурсов для одной ноды можно посмотреть &lt;a href=&quot;/2016/05/optimization-standalone-elasticsearch-in-elk-stack.html&quot;&gt;здесь&lt;/a&gt;). Однако это решение не спасает при хранении логов за очень большие периоды, в связи с чем я решил рассмотреть вариант хранения старых логов на отдельном сервере.&lt;/p&gt;

&lt;p&gt;Т.к. речь идет именно о логах, то шансы изменения данных из прошлого стремятся к нулю. Это позволяет нам не думать о необходимости записи в старые индексы и просто хранить их на сервере (например более дешевом с медленными дисками).
Генеральная идея состоит в том, чтобы добавить дополнительную ноду данных в кластер и распределять индексы (indices) в зависимости от времени их создания.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;section&quot;&gt;Настройка кластера&lt;/h2&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Настройка мастер ноды&lt;/h3&gt;
&lt;p&gt;Пропуская процесс установки &lt;code class=&quot;highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt; укажу лишь необходимые настройки:&lt;/p&gt;

&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;elasticsearch.yml&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;node.master&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;node.data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;node.node_type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hot&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;discovery.zen.ping.multicast.enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;discovery.zen.ping.unicast.hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;10.0.0.2&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Нода будет иметь тэг &lt;code class=&quot;highlighter-rouge&quot;&gt;hot&lt;/code&gt; и хранит индексы для быстрого доступа.&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;Настройка ноды дынных&lt;/h3&gt;

&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;elasticsearch.yml&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;node.master&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;node.data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;node.node_type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;warm&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;discovery.zen.ping.multicast.enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;discovery.zen.ping.unicast.hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;10.0.0.1&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Нода будет иметь тэг &lt;code class=&quot;highlighter-rouge&quot;&gt;warm&lt;/code&gt; и мы будем перемещать на нее устаревшие indices.&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;Перемещение&lt;/h3&gt;
&lt;p&gt;После подготовки нод надо перезапустить &lt;code class=&quot;highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Убедиться, что ноды теперь в кластере можно командой:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ curl http://localhost:9200/_nodes/process?pretty
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Следующая команда поставит аттрибут аллокации для всех индексов старше 7 дней:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ curator --logfile /var/log/curator.log --loglevel INFO --logformat default --master-only --host localhost --port 9200 allocation --rule node_type=warm indices --time-unit days --older-than 7 --timestring &#39;%Y.%m.%d&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Теперь можно добавить команду curator-а, описанную выше, в cron сервера и перемещение будет происходить автоматически.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jun 2016 12:41:00 +0000</pubDate>
        <link>https://cyberflow.net/2016/06/elasticsearch-cluster-for-old-indice.html</link>
        <guid isPermaLink="true">https://cyberflow.net/2016/06/elasticsearch-cluster-for-old-indice.html</guid>
        
        <category>elasticsearch</category>
        
        
        <category>elasticsearch</category>
        
      </item>
    
      <item>
        <title>Оптимизация standalone сервера elasticsearch</title>
        <description>&lt;p&gt;При использовании &lt;a href=&quot;https://www.elastic.co&quot;&gt;elasticsearch&lt;/a&gt; для сбора и анализа логов возникает вопрос оптимизации для одного сервера. Т.к. &lt;code class=&quot;highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt; расчитан для использования в кластере, то большинство настроек “по умолчанию” выставлены так, что один сервер работает не эффективно. В этой заметке я разберу несколько примеров оптимизации &lt;code class=&quot;highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt; для работы на одном сервере.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;shards&quot;&gt;Shards&lt;/h3&gt;
&lt;p&gt;Первое что нужно знать, что каждый шард использует пямять и процессор. При использовании &lt;code class=&quot;highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt; и &lt;code class=&quot;highlighter-rouge&quot;&gt;logstash&lt;/code&gt; получается, что каждый день &lt;code class=&quot;highlighter-rouge&quot;&gt;logstash&lt;/code&gt; создает новый &lt;code class=&quot;highlighter-rouge&quot;&gt;indice&lt;/code&gt;, а дефолтные настройки &lt;code class=&quot;highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt; создают 5 шардов в каждом индексе. В итоге с каждым днем кол-во шардов увеличивается вместе с утилизацие памяти и процессора.&lt;/p&gt;

&lt;p&gt;Первое что стоит сделать это изменить глобальные настройки &lt;code class=&quot;highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt; так, чтобы кол-во шардов было оптимальное. Если не планируется кластер, то и создавать большое кол-во шардов не имеет смысла. За эту настройку отвечает директива &lt;code class=&quot;highlighter-rouge&quot;&gt;index.number_of_shards&lt;/code&gt;. Добавив ее в конфиг можно установить кол-во создаваемых шардов для всех новых индексов. Как мне кажется, при использовании только одного сервера &lt;code class=&quot;highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt;, логично установить этот параметр равным 1.&lt;/p&gt;

&lt;h3 id=&quot;replics&quot;&gt;Replics&lt;/h3&gt;
&lt;p&gt;Реплики - еще один инструмент кластера &lt;code class=&quot;highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt;, который взаимодействует с шардами. Кол-во реплик указывают сколько “копий” шардов должно храниться на других нодах кластера, что в случае использования одной ноды не актуально. За эту настройку отвечает директива &lt;code class=&quot;highlighter-rouge&quot;&gt;index.number_of_replicas&lt;/code&gt;. Если сервер один, то и реплицировать некуда, устанавить этот параметр в 0 - логичное решение.&lt;/p&gt;

&lt;p&gt;Однако что делать, если сервер уже работает какое-то время с дефолтными настройками? Можно заметить, что API &lt;code class=&quot;highlighter-rouge&quot;&gt;elasticsearch&lt;/code&gt; возвращает следующее:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;curl -XGET http://localhost:9200/_cat/shards
logstash-2016.05.09 1 p STARTED    1520055  985.3mb 127.0.0.1 logstash1
logstash-2016.05.09 1 r UNASSIGNED
logstash-2016.05.09 3 p STARTED    1520640  985.9mb 127.0.0.1 logstash1
logstash-2016.05.09 3 r UNASSIGNED
logstash-2016.05.09 4 p STARTED    1520955  981.4mb 127.0.0.1 logstash1
logstash-2016.05.09 4 r UNASSIGNED
logstash-2016.05.09 2 p STARTED    1520377    966mb 127.0.0.1 logstash1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;где &lt;code class=&quot;highlighter-rouge&quot;&gt;UNASSIGNED&lt;/code&gt; - это шарды-реплики, которые ожидают репликации.&lt;/p&gt;

&lt;p&gt;Исправить это можно следующим обращением к api:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XPUT &quot;localhost:9200/logstash-2016.05.09/_settings&quot; -d &#39;{
    &quot;index&quot; : {
        &quot;number_of_replicas&quot; : 0
    }
}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;если количество индексов с шардами, ожидающими репликации большое, то можно воспользоваться следующим однострочником:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ind &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;curl -XGET http://localhost:9200/_cat/shards | grep UNASSIGNED | awk &lt;span class=&quot;s1&quot;&gt;&#39;{print $1}&#39;&lt;/span&gt; | uniq&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;curl -XPUT &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ind&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/_settings&quot;&lt;/span&gt; -d &lt;span class=&quot;s1&quot;&gt;&#39;{ &quot;index&quot; : { &quot;number_of_replicas&quot; : 0 } }&#39;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 12 May 2016 12:12:00 +0000</pubDate>
        <link>https://cyberflow.net/2016/05/optimization-standalone-elasticsearch-in-elk-stack.html</link>
        <guid isPermaLink="true">https://cyberflow.net/2016/05/optimization-standalone-elasticsearch-in-elk-stack.html</guid>
        
        <category>monitoring</category>
        
        <category>linux</category>
        
        <category>elasticsearch</category>
        
        
        <category>elasticsearch</category>
        
        <category>monitoring</category>
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Grafana/nginx auth proxy httpaswd</title>
        <description>&lt;p&gt;Краткое описание настройки &lt;a href=&quot;http://grafana.org&quot;&gt;Grafana&lt;/a&gt; (&amp;gt; 2.0) и nginx с использованием auth basic авторизации через файлы htpasswd.&lt;/p&gt;

&lt;p&gt;Необходимые настройки конфига Grafana:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[server]
protocol = http
http_port = 3000
domain = localhost
http_addr = 127.0.0.1
...
[auth.basic]
enabled=false
[users]
allow_sign_up = false
auto_assign_org = true
auto_assign_org_role = Editor
[auth.proxy]
enabled = true
header_name = X-WEBAUTH-USER
auto_sign_up = true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!--more--&gt;
&lt;p&gt;Настройка nginx:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
  listen                &amp;lt;server_ip&amp;gt;:80;

  server_name           &amp;lt;server_hostname&amp;gt;;
  access_log            /var/log/nginx/grafana.access.log;

  location / {
    auth_basic            &#39;Restricted&#39;;
    auth_basic_user_file  &amp;lt;path/to/htpasswd_file&amp;gt;;
    proxy_set_header X-WEBAUTH-USER $remote_user;
    proxy_pass http://grafana;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;После сделать рестарт сервера Grafana и nginx.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Mar 2016 17:25:00 +0000</pubDate>
        <link>https://cyberflow.net/2016/03/grafana-slash-nginx-auth-proxy-httpaswd.html</link>
        <guid isPermaLink="true">https://cyberflow.net/2016/03/grafana-slash-nginx-auth-proxy-httpaswd.html</guid>
        
        <category>monitoring</category>
        
        <category>linux</category>
        
        <category>grafana</category>
        
        <category>nginx</category>
        
        <category>auth</category>
        
        
        <category>linux</category>
        
        <category>monitoring</category>
        
      </item>
    
      <item>
        <title>Пробрасывание X сессии от пользователя к root</title>
        <description>&lt;p&gt;Сталкнулся с необходимостью запуска графической утилиты на удаленном сервере под пользователем root, но доступ для root по ssh закрыт.&lt;/p&gt;

&lt;p&gt;В итоге нашел такой workaround:&lt;/p&gt;

&lt;p&gt;Заходим на сервер под пользователем прокинув X сессию через ssh:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;~$ &lt;/span&gt;ssh -X user@hostname
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Находим X сессию, потом свитчемся в root:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;~$ &lt;/span&gt;xauth list
hostname/unix:10  MIT-MAGIC-COOKIE-1  f714ef310193878cae851635b871d840
&lt;span class=&quot;gp&quot;&gt;~$ &lt;/span&gt;sudo -s
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Добавляем имеющуюся сессию пользователю root&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;~# &lt;/span&gt;xauth add hostname/unix:10  MIT-MAGIC-COOKIE-1 f714ef310193878cae851635b871d840
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Все! Можно запускать X приложение под root-ом.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Sep 2015 15:24:00 +0000</pubDate>
        <link>https://cyberflow.net/2015/09/use-ssh-x-session-from-user-to-root.html</link>
        <guid isPermaLink="true">https://cyberflow.net/2015/09/use-ssh-x-session-from-user-to-root.html</guid>
        
        <category>linux</category>
        
        <category>ssh</category>
        
        <category>xsession</category>
        
        
        <category>notice</category>
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Мониторинг dmesg</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;Задача&lt;/h3&gt;
&lt;p&gt;Необходимо организовать централизованный сбор логов, в частности сообщений ядра &lt;code class=&quot;highlighter-rouge&quot;&gt;dmesg&lt;/code&gt; и реакции на них со стороны событийного мониторинга (например &lt;em&gt;nagios&lt;/em&gt;).&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Передача сообщений ядра на сервер логов&lt;/h3&gt;
&lt;p&gt;Для передачи сообщения ядра можно использовать модуль &lt;code class=&quot;highlighter-rouge&quot;&gt;netconsole&lt;/code&gt;. Он позволяет передавать сообщения журнала ядра (dmesg) на удаленный компьютер по сети, без участия пространства пользователя (например, syslogd).
Для сбора данных можно использовать, например &lt;a href=&quot;http://logstash.net/&quot;&gt;logstash&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Netconsole может быть встроен в ядро, так и загружен как модуль. Я использую загрузка модуля после загрузки системы, чтобы гарантировать, что сеть уже работает  настроена.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# dmesg -n 7
# modprobe netconsole netconsole=&quot;6665@10.13.77.99/eth1,6666@10.13.77.1/d4:ae:52:cf:33:96&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Первая команда устанавливает уровень логирования для &lt;code class=&quot;highlighter-rouge&quot;&gt;dmesg&lt;/code&gt;.
Вторая загружает модуль &lt;code class=&quot;highlighter-rouge&quot;&gt;netconsole&lt;/code&gt; с параметрами, где:
&lt;!--more--&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;6665 - порт отправки сообщений&lt;/li&gt;
  &lt;li&gt;10.13.77.99 - ip адрес хоста, с которого отправляются сообщения (текущий сервер)&lt;/li&gt;
  &lt;li&gt;eth1 - интерфейс с которого отправляются сообщения&lt;/li&gt;
  &lt;li&gt;6666 - порт, на который принимаются сообщения&lt;/li&gt;
  &lt;li&gt;10.13.77.1 - ip адрес хоста, на который принимаются сообщения&lt;/li&gt;
  &lt;li&gt;MAC - mac адрес интерфейса, на который принимаются сообщения&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Установка &lt;code class=&quot;highlighter-rouge&quot;&gt;logstash&lt;/code&gt; не является темой этой статьи, поэтому я буду показывать лишь части конфига необходимые для реализации задачи. Для получения сообщений от &lt;code class=&quot;highlighter-rouge&quot;&gt;netconsole&lt;/code&gt; надо указать следующий кусок конфига в блоке &lt;code class=&quot;highlighter-rouge&quot;&gt;input&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;udp&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt; &quot;netconsole&quot;&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt; &quot;6666&quot;&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt; &quot;10.13.77.1&quot; }&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;где &lt;code class=&quot;highlighter-rouge&quot;&gt;host&lt;/code&gt; - это ip адрес интерфейса на который будут присылаться сообщения ядра.&lt;/p&gt;

&lt;p&gt;Теперь все сообщения ядра отправляются в &lt;code class=&quot;highlighter-rouge&quot;&gt;logstash&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;Оповещения при критических сообщениях ядра&lt;/h3&gt;
&lt;p&gt;В моём случае я хочу отслеживать наличие OOM сообщений и рассылать оповещения об этом. &lt;code class=&quot;highlighter-rouge&quot;&gt;Logstash&lt;/code&gt; может отправлять письма с оповещениями сам, но мне интересно делать это событийным мониторингом.&lt;/p&gt;

&lt;p&gt;В качестве событийного мониторинга я использую &lt;a href=&quot;http://www.shinken-monitoring.org&quot;&gt;shinken&lt;/a&gt;. Для реализации оповещения админов, по моему, лучше использовать сервисные чеки &lt;code class=&quot;highlighter-rouge&quot;&gt;is_volatile&lt;/code&gt;. Эта опция позволяет отправлять оповещения на каждый статус non-OK даже если он не менялся. Подробнее об этой опции можно почитать &lt;a href=&quot;https://shinken.readthedocs.org/en/latest/07_advanced/volatileservices.html&quot;&gt;тут&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Чтобы не повторяться в описании каждого сервиса напишем template для volatile сервисов:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;define service {
  name                          volatile-service
  check_command                 dummy_ok
  max_check_attempts            1
  check_interval                5
  retry_interval                2
  active_checks_enabled         0
  passive_checks_enabled        1
  check_period                  24x7
  check_freshness               1
  freshness_threshold           300
  flap_detection_enabled        0
  notification_interval         60
  notification_period           24x7
  notification_options          u,c,w
  notifications_enabled         1
  contact_groups                sysadmin
  register                      0
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;В данном описании мы определяем пассивные сервисы, которые будут автоматически сбрасываться в статус ОК через 5 минут после изменения статуса. Так же важно в опции &lt;code class=&quot;highlighter-rouge&quot;&gt;max_check_attempts&lt;/code&gt; указать 1, чтобы сервис сразу после первого сообщения переходил в &lt;code class=&quot;highlighter-rouge&quot;&gt;hard-state&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Теперь можно описать сам сервис используя вышеописанный template:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;define service {
  hostgroup_name                linux
  service_description           log_event
  servicegroups                 logs
  initial_state                 o
  register                      1
  use                           volatile-service
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;С настройкой событийного мониторинга закончили. Переходим к настройке &lt;code class=&quot;highlighter-rouge&quot;&gt;logstash&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Т.к. все сообщения ядра приходят от IP адреса сервера, который его сгенерил, то первое что я рекомендую сделать это настроить для серверов обратную зону, что позволит упростить и дальнейшую работу с логами и передачу сообщений в &lt;em&gt;shinken&lt;/em&gt;. Если обратная зона есть, то можно добавить в блок &lt;em&gt;filter&lt;/em&gt; следующий кусок конфига:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;dns&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;&#39;action&#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;replace&quot;&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;&#39;reverse&#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&quot;host&quot;]&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;&#39;type&#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;netconsole&quot;&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Теперь в поле &lt;code class=&quot;highlighter-rouge&quot;&gt;host&lt;/code&gt; вместо IP адреса сервера будет подставляться последний уровень домена хоста (т.е. если полный домен myserver.my.domain.example.com, то в поле попадёт только myserver). Это упростит жизнь в будущем.&lt;/p&gt;

&lt;p&gt;Далее добавим фильтрацию сообщений, на появления которых хотим получать оповещения. Для примера возьмём строку сообщающую о приходи &lt;em&gt;oom&lt;/em&gt; киллера и будем тагать записи такого типа:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;err&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[message]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;/.+Out.of.memory.+Kill.process.+/&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;err&quot;&gt;noop&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
                  &lt;span class=&quot;err&quot;&gt;&#39;add_tag&#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&quot;notify&quot;]&lt;/span&gt;
              &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Осталось научить &lt;em&gt;logstash&lt;/em&gt; отправлять сообщения с тэгом &lt;code class=&quot;highlighter-rouge&quot;&gt;notify&lt;/code&gt;. Для отправки на сервер &lt;em&gt;Nagios&lt;/em&gt; можно использовать уже готовые плагины logstash &lt;code class=&quot;highlighter-rouge&quot;&gt;nagios&lt;/code&gt; или &lt;code class=&quot;highlighter-rouge&quot;&gt;nagios_nsca&lt;/code&gt;. Я использую &lt;em&gt;shinken&lt;/em&gt; и хоть он и совместим с &lt;em&gt;Nagios&lt;/em&gt; в большинстве случаев, в этом я предпочёл использовать API &lt;em&gt;shinken&lt;/em&gt;. Для отправки сообщений я написал простенький скрипт на &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;log_event_sender.sh&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# WS_Arbiter config&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;username;
&lt;span class=&quot;nv&quot;&gt;PASS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;password;
&lt;span class=&quot;nv&quot;&gt;WS_IP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.0.55;
&lt;span class=&quot;nv&quot;&gt;WS_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7760;

&lt;span class=&quot;nv&quot;&gt;HOST_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;;
&lt;span class=&quot;nv&quot;&gt;SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt; | sed -r -e &lt;span class=&quot;s1&quot;&gt;&#39;s/[[:space:]]/%20/g&#39;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;;
&lt;span class=&quot;nv&quot;&gt;RCODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2;
&lt;span class=&quot;nv&quot;&gt;MESSAGE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt; | sed -r -e &lt;span class=&quot;s1&quot;&gt;&#39;s/[[:space:]]/%20/g&#39;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;;

&lt;span class=&quot;nv&quot;&gt;DATA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;time_stamp=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +%s&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;host_name=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOST_NAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;service_description=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SERVICE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;return_code=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$RCODE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;output=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$MESSAGE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;;
&lt;span class=&quot;nv&quot;&gt;SEND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl -s -u &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PASS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; -d &lt;span class=&quot;nv&quot;&gt;$DATA&lt;/span&gt; http://&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WS_IP&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WS_PORT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/push_check_result&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Добавляем отправку сообщений с тэгом &lt;code class=&quot;highlighter-rouge&quot;&gt;notify&lt;/code&gt; в конфиг &lt;em&gt;logstash&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;err&quot;&gt;&#39;tags&#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&quot;notify&quot;]&lt;/span&gt;
       &lt;span class=&quot;err&quot;&gt;&#39;command&#39;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;/usr/local/log_event_sender.sh&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%{host}&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;log_event&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&#39;%{message}&#39;&quot;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Дальнейшее расширение очевидно. Если нужно добавить оповещение о сообщениях другого типа, то нужно просто отлавливать их в &lt;em&gt;logstash&lt;/em&gt; и навешивать тэг &lt;code class=&quot;highlighter-rouge&quot;&gt;notify&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Jul 2014 09:58:00 +0000</pubDate>
        <link>https://cyberflow.net/2014/07/monitoring-dmesg.html</link>
        <guid isPermaLink="true">https://cyberflow.net/2014/07/monitoring-dmesg.html</guid>
        
        <category>monitoring</category>
        
        <category>dmesg</category>
        
        <category>oom</category>
        
        <category>logs</category>
        
        <category>logstash</category>
        
        <category>netconsole</category>
        
        <category>linux</category>
        
        <category>shinken</category>
        
        
        <category>monitoring</category>
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Erchef no_connect Error</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;Предпосылки&lt;/h3&gt;
&lt;p&gt;Столкнулся с тем, что при большом количестве нод в &lt;a href=&quot;http://opscode.com&quot;&gt;chef-server&lt;/a&gt; версий &lt;em&gt;11.0.4&lt;/em&gt; и &lt;em&gt;11.0.8&lt;/em&gt; поставленных из omnibus пакетов для Ubuntu, он с большой периодичностью стал отдавать &lt;code class=&quot;highlighter-rouge&quot;&gt;500 Internal server error&lt;/code&gt; нодам при выполнении куска рецепта, который делает поиск по data_bag’ам. При изучении логов выяснилось следующее:
В логах nginx’a видно, что запросы на поиск отправляются на бэкэнд erchef’а (ядро chef-server написанное на эрланге) и в ответ получаем &lt;code class=&quot;highlighter-rouge&quot;&gt;500&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;192.168.1.111 - - [27/May/2014:11:45:28 +0000] &quot;GET /search/databag1?q=id:node1&amp;amp;sort=X_CHEF_id_CHEF_X%20asc&amp;amp;start=0&amp;amp;rows=1000 HTTP/1.1&quot; 500 &quot;0.051&quot; 36 &quot;-&quot; &quot;Chef Client/11.6.0 (ruby-1.9.3-p429; ohai-6.18.0; x86_64-linux; +http://opscode.com)&quot; &quot;127.0.0.1:8000&quot; &quot;500&quot; &quot;0.046&quot; &quot;11.6.0&quot; &quot;algorithm=sha1;version=1.0;&quot; &quot;auth1&quot; &quot;2014-05-27T11:45:28Z&quot; &quot;2jmj7l5rSw0yVb/vlWAYkK/YBwk=&quot; 1011
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Смотрим далее в логи &lt;code class=&quot;highlighter-rouge&quot;&gt;erchef&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ERROR&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;REPORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;====&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;May&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;webmachine&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/search/databag1&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function_clause&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chef_wm_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&#39;-make_bulk_get_fun/5-lc$^1/1-2-&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;no_connections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;databag1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src/chef_wm_search.erl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;233&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]},&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chef_wm_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetch_result_rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src/chef_wm_search.erl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;351&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]},&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chef_wm_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_search_results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src/chef_wm_search.erl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;324&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]},&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chef_wm_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src/chef_wm_search.erl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;130&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]},&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webmachine_resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource_call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src/webmachine_resource.erl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;166&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]},&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webmachine_resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src/webmachine_resource.erl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]},&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webmachine_decision_core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource_call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src/webmachine_decision_core.erl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]},&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webmachine_decision_core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src/webmachine_decision_core.erl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;532&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]}]}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;К сожалению то, что erchef пишет в свой лог не информативно. Однако путём длительного перебора удалось понять, что проблема в соединении к базе.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Решение&lt;/h3&gt;
&lt;p&gt;Суть проблемы в том, что erchef открывает &lt;em&gt;N&lt;/em&gt; соединений к базе &lt;em&gt;postgresql&lt;/em&gt; (по умолчанию 20) и вываливается с выше указанной ошибкой, если этих 20-и соединений ему не хватает.
Чтобы увеличить количество соединений нужно поправить конфиг erchef’a.&lt;/p&gt;

&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;/var/opt/chef-server/erchef/etc/app.config&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pooler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pools&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;sqerl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                     &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                     &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                     &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_mfa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqerl_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]}}]]},&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metrics_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folsom_metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Правим значения для &lt;code class=&quot;highlighter-rouge&quot;&gt;max_count&lt;/code&gt; и &lt;code class=&quot;highlighter-rouge&quot;&gt;init_count&lt;/code&gt; с 20 на большие. В моём случае пока хватает 60 и 40.&lt;/p&gt;
</description>
        <pubDate>Wed, 28 May 2014 09:42:00 +0000</pubDate>
        <link>https://cyberflow.net/2014/05/erchef-no-connect-error.html</link>
        <guid isPermaLink="true">https://cyberflow.net/2014/05/erchef-no-connect-error.html</guid>
        
        <category>chef</category>
        
        <category>chef-server</category>
        
        <category>erchef</category>
        
        <category>error</category>
        
        <category>no_connections</category>
        
        
        <category>chef</category>
        
      </item>
    
      <item>
        <title>Трюки с ssh config</title>
        <description>&lt;p&gt;Конфиг ssh очень полезная и удобная штука. Пользуюсь им давно, но недавно открыл ещё несколько замечательных возможностей. Решил поделиться парой полезных фич и рассказать об одном маленьком лайфхаке.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Шаринг соединений&lt;/h3&gt;
&lt;p&gt;Часто бывает необходимо по работе держать много консолей с ssh на один сервер. Для упрощения такой работы (с точки зрения компьютера) в OpenSSH есть возможность шарить соединения. Т.е. если вы зашли на сервер, то в системе создается &lt;em&gt;ControlSocket&lt;/em&gt; и все последующие соединения на этот сервер будут использовать уже созданный сокет, а не создавать новое подключение. И если при первом соединении сервер спрашивает у вас пароль, то при повторном использовании уже сокета авторизация не потребуется.&lt;/p&gt;

&lt;p&gt;Для настройки &lt;em&gt;Connection sharing&lt;/em&gt; необходимо добавить следующие строчки в начало конфига ssh:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ControlMaster auto
ControlPath /tmp/ssh_%h_%p_%r
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Проброс соединений через сервер&lt;/h3&gt;
&lt;p&gt;Другая не менее полезная штука - это возможность настроить соединение через сервер. Т.е. вместо двух команд: &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh server1&lt;/code&gt; и потом уже оттуда &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh server2&lt;/code&gt;, можно сразу в конфиге всё прописать и ходить одной командой.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Выглядеть такой конфиг будет примерно так:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host server2
    HostName server2.domain.org
    ProxyCommand ssh -W %h:%p -C server1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Тут стоит пояснить, что ssh подставит вместо &lt;code class=&quot;highlighter-rouge&quot;&gt;%h&lt;/code&gt; хост, а вместо &lt;code class=&quot;highlighter-rouge&quot;&gt;%p&lt;/code&gt; порт.&lt;/p&gt;

&lt;p&gt;Но и это ещё не всё. Помимо это ssh понимает паттерны внутри своего конфига.
Приведу пример:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host db*
   ProxyCommand ssh -W %h:%p -C gateway
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Теперь мы можем одной командой, скажем &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh db2.domain.org&lt;/code&gt; попасть на сервер пробросив соединение через другой.&lt;/p&gt;

&lt;p&gt;Этот метод в сочетании с шарингом соединений даёт мощный инструмент.&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;Проброс соединений для серверов с похожими именами&lt;/h3&gt;
&lt;p&gt;А теперь о проблеме с которой я столкнулся и “героически” решил.
ПРоблема была в том, что есть два набора серверов с одинаковыми именами, пусть для примера это будут &lt;em&gt;db1&lt;/em&gt; &lt;em&gt;db2&lt;/em&gt; &lt;em&gt;dbN&lt;/em&gt;, находящихся за разными серверами, через которые на них надо ходить, пусть это будет &lt;em&gt;gate1&lt;/em&gt; и &lt;em&gt;gate2&lt;/em&gt;. Предыдущий пример с использованием паттернов покрывает задачу лишь частично. Можно, конечно, выкрутиться используя паттерны с доменным именем, но в таком случае надо набирать полное доменное имя сервера, хотя с гейта на него можно попасть по короткому имени без домена.
Решить эту проблему удалось с помощью использования факта, что &lt;code class=&quot;highlighter-rouge&quot;&gt;ProxyCommand&lt;/code&gt; интерпретируется bash’ем =)
В итоге конфиг выглядит приблизительно так:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host db*.dc1
    ProxyCommand ssh -W $(echo %h| cut -d. -f1):%p -C gate1

Host db*.dc2
    ProxyCommand ssh -W $(echo %h| cut -d. -f1):%p -C gate2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Т.е. в консоле мы вводим &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh db5.dc2&lt;/code&gt;, данный сервер матчится со вторым паттерном, но пре передачи имени хоста в прокси-команду ненужная часть домена отбрасывается.&lt;/p&gt;

&lt;p&gt;Больше о конфиге ssh можно узнать из документации: &lt;a href=&quot;http://man.cx/ssh_config&quot;&gt;ssh_config&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 22 May 2014 20:57:00 +0000</pubDate>
        <link>https://cyberflow.net/2014/05/ssh-config-tricks.html</link>
        <guid isPermaLink="true">https://cyberflow.net/2014/05/ssh-config-tricks.html</guid>
        
        <category>linux</category>
        
        <category>ssh_config</category>
        
        <category>openssh</category>
        
        <category>ssh</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Установка slave mysql-percona сервера</title>
        <description>&lt;p&gt;Хочу сразу заметить, что способов развернуть slave сервер существует масса. Я хочу рассказать лишь об одном из них. Во-первых для себя, т.к. я часто применяю его в работе. Во-вторых для тех, у кого стоит задача по развертыванию независимого (поясню: это значит что перенос файлов базы с одного сервера на другой не подходит, как в моём случае. Т.е. репликация не полная) slave и при этом репликация производиться только над некоторыми БД, а не над всем, что есть.&lt;/p&gt;

&lt;p&gt;Подразумевается, что уже есть мастер сервер, на котором крутятся БД и настроен для репликации.&lt;/p&gt;

&lt;p&gt;Теперь надо сделать dump баз данных, при этом будем использовать атрибуты &lt;code class=&quot;highlighter-rouge&quot;&gt;add-drop-database&lt;/code&gt; для добавление в dump строчки удаляющей базу перед её созданием и &lt;code class=&quot;highlighter-rouge&quot;&gt;master-data&lt;/code&gt; для добавления информации о бин-логах и их позиции на момент создания dump’a. Так же, чтобы избежать переноса служебных баз, формируем список баз для переноса исключив из них все служебные базы mysql (в список можно добавить и другие базы по аналогии). После создания dump’a переносим его на slave сервер.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# DATABASE_LIST=$(mysql -NBe &#39;show schemas&#39; | grep -wv &#39;mysql\|performance_schema\|information_schema&#39;)
# mysqldump  --databases $DATABASE_LIST --add-drop-database --master-data -u root -p &amp;gt; dbdump.db
# scp dbdump.db mysql-slave-host:~/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;На slave сервере добавляем необходиму информацию для репликации. Это можно сделать и после развертывания dump’a. Так же я пропущу описание настройки репликации в конфигурации mysql.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# mysql
mysql&amp;gt; CHANGE MASTER TO MASTER_HOST=&#39;mysql-master-host&#39;, MASTER_USER=&#39;$replica_user&#39;, MASTER_PASSWORD=&#39;$slavepass&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Теперь можно залить сделанный dump и после этого включить репликацию.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# mysql -p &amp;lt; ~/dbdump.db
# mysql
mysql&amp;gt; slave start;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Wed, 14 May 2014 18:03:00 +0000</pubDate>
        <link>https://cyberflow.net/2014/05/install-slave-percona-server.html</link>
        <guid isPermaLink="true">https://cyberflow.net/2014/05/install-slave-percona-server.html</guid>
        
        <category>linux</category>
        
        <category>mysql</category>
        
        <category>replication</category>
        
        <category>ha</category>
        
        
        <category>ha</category>
        
        <category>linux</category>
        
        <category>databases</category>
        
      </item>
    
      <item>
        <title>Репликация таблиц базы chef-server </title>
        <description>&lt;h3 id=&quot;intro&quot;&gt;Intro&lt;/h3&gt;
&lt;p&gt;В данной статье я расскажу как настроить два сервера &lt;a href=&quot;http://www.opscode.com&quot; title=&quot;Opscode&quot;&gt;chef-server&lt;/a&gt; версии 11 с репликацией части таблиц базы postgresql для обеспечения отказоустойчивости. Основная цель репликации это хранения данных о клиентах и нодах для прозрачного доступа нод к любому из &lt;a href=&quot;http://www.opscode.com&quot; title=&quot;Opscode&quot;&gt;chef&lt;/a&gt; серверов и возможности работы без перерегистрации. Предлагаемое &lt;a href=&quot;http://www.opscode.com&quot; title=&quot;Opscode&quot;&gt;opscode&lt;/a&gt; решение репликации данных через DRBD показалось мне не самым удобным и, главное, надёжным. По сему было принято решение искать альтернативные пути. Так как реплицировать все данные из всех таблиц нет необходимости, то было решено посмотреть в сторону &lt;a href=&quot;http://wiki.postgresql.org/wiki/Skytools&quot;&gt;skytools&lt;/a&gt; и &lt;a href=&quot;http://wiki.postgresql.org/wiki/Skytools#Londiste&quot;&gt;londiste&lt;/a&gt;, которые позволяют реплицировать только определенные таблицы БД.&lt;/p&gt;

&lt;p&gt;Однако не обошлось без сюрпризов. &lt;a href=&quot;http://www.opscode.com&quot; title=&quot;Opscode&quot;&gt;Opscode&lt;/a&gt; распространяет shef-server 11 по средствам уже собранных omnibus пакетов, в котором свой postgres 9.2. Этот постгрес собран урезанным и не работает с skytools. В итоге в этой статье будет описано как поставить chef-server из omnibus пакета на дистрибутивный postgres 9.2 и прикрутить репликацию через londiste.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Мы будем устанавливать всё на &lt;a href=&quot;http://debian.org&quot;&gt;debian 7&lt;/a&gt;. Будет 2 сервера: &lt;code class=&quot;highlighter-rouge&quot;&gt;chef-master&lt;/code&gt; и &lt;code class=&quot;highlighter-rouge&quot;&gt;chef-slave&lt;/code&gt; соответственно.&lt;/p&gt;

&lt;h3 id=&quot;postgresql-92&quot;&gt;Добавление репозитория; Установка postgresql 9.2&lt;/h3&gt;
&lt;p&gt;К сожалению в дистрибутивном репозитории debian нет postgresql 9.2. По этому будем использовать не родной.
Добавляем репозиторий для установки postgres-a и skytools и устанавливаем на обоих серверах:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;root@chef-master:~# wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
root@chef-master:~# echo &quot;deb http://apt.postgresql.org/pub/repos/apt/ wheezy-pgdg main&quot; &amp;gt; /etc/apt/sources.list.d/postgresql.list
root@chef-master:~# aptitude update
root@chef-master:~# aptitude install skytools-modules-9.2 skytools3 skytools3-ticker skytools3-walmgr&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;!-- more --&gt;

&lt;h3 id=&quot;chef-server--&quot;&gt;Установка chef-server на мастер&lt;/h3&gt;
&lt;p&gt;Теперь можно начинать устанавливать chef-server:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;root@chef-master:~# wget https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/11.04/x86_64/chef-server_11.0.4-1.ubuntu.11.04_amd64.deb
root@chef-master:~# dpkg -i chef-server_11.0.4-1.ubuntu.11.04_amd64.deb&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Перед запуском &lt;code class=&quot;highlighter-rouge&quot;&gt;chef-server-ctl reconfigure&lt;/code&gt; нужно немного поправить chef-solo рецепт для postgresql из omnibus пакета. Надо заменить исходный рецепт &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/chef-server/embedded/cookbooks/chef-server/recipes/postgresql.rb&lt;/code&gt; на не исходный - &lt;a href=&quot;/static/files/postgresql.rb&quot;&gt;postgresql.rb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Запускаем &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo chef-server-ctl reconfigure&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Собственно после этих действий получаем chef-server на дистрибутивном postgresql 9.2, что уже не плохо. Далее надо повторить эту же операцию на втором сервере(chef-slave).&lt;/p&gt;

&lt;h3 id=&quot;chef-server---&quot;&gt;Установка chef-server; Подготовка к репликации&lt;/h3&gt;
&lt;p&gt;Процедура идентична за исключение нескольких дополнительных шагов.
Необходимо настроить postgres на IP адресе, который позволит мастеру производить репликацию и добавить в &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt; разрешение для мастера.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@chef-slave:~# sed -i &quot;s/#listen_addresses = &#39;localhost&#39;/listen_addresses = &#39;*&#39;/&quot; /etc/postgresql/9.2/mainpostgresql.conf
root@chef-slave:~# echo &quot;host all all &amp;lt;chef-master-ip&amp;gt;/32 trust&quot; &amp;gt;&amp;gt; /etc/postgresql/9.2/main/pg_hba.conf
root@chef-slave:~# service postgresql restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Далее надо почистить текущую базу от данных:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@chef-slave:~# su postgres -c &quot;psql -d &#39;opscode_chef&#39; -c \&quot;delete from clients; \&quot;&quot;
root@chef-slave:~# su postgres -c &quot;psql -d &#39;opscode_chef&#39; -c \&quot;delete from osc_users; \&quot;&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Ещё надо подменить содержимое директории &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/chef-server&lt;/code&gt; на сервер &lt;code class=&quot;highlighter-rouge&quot;&gt;chef-slave&lt;/code&gt; на содержимое той же директории с сервер &lt;code class=&quot;highlighter-rouge&quot;&gt;chef-master&lt;/code&gt;. Там хранятся приватные ключи от системных пользователей chef-server-a.&lt;/p&gt;

&lt;p&gt;Теперь всё готово к запуску репликации.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Настройка репликации&lt;/h3&gt;
&lt;p&gt;Для начала нужно добавить londiste и pgq в нашу базу. Для этого воспользуемся утилитой qadmin, которая была добавлена в skytools3:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;root@chef-master:~# su postgres -c &quot;qadmin -h localhost -U postgres -d opscode_chef -c &#39;install londiste&#39;&quot;
INSTALL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Пишем конфиги для мастера и слейва(оба конфига лежат на chef-master):&lt;/p&gt;

&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;/etc/skytools/replication_master.ini&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cfg&quot; data-lang=&quot;cfg&quot;&gt;[londiste3]
job_name = replication_src
db = host=master-db dbname=opscode_chef user=postgres
queue_name = replica
logfile = /var/log/skytools/replica_src.log
pidfile = /var/run/skytools/replica_src.pid&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Добавляем мастер:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;root@chef-master:~# londiste3 /etc/skytools/replication_master.ini create-root master-server &#39;dbname=opscode_chef user=postgres&#39;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Конфиг для слейва:&lt;/p&gt;

&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;/etc/skytools/replication_slave.ini&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cfg&quot; data-lang=&quot;cfg&quot;&gt;[londiste3]
job_name = replication_dst
db = host=master-db dbname=opscode_chef user=postgres
queue_name = replica
logfile = /var/log/skytools/replica_dst.log
pidfile = /var/run/skytools/replica_dst.pid&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Добавление слейва:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;root@chef-master:~# londiste3 /etc/skytools/replication_slave.ini create-leaf slave-server &#39;dbname=opscode_chef host=chef-slave user=postgres&#39; --provider=&#39;host=localhost dbname=opscode_chef user=postgres&#39;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Добавляем конфиг для pgq демона:&lt;/p&gt;

&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;/etc/skytools/pgqd.ini&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cgf&quot; data-lang=&quot;cgf&quot;&gt;[pgqd]
logfile = /var/log/skytools/pgqd.log
pidfile = /var/run/skytools/pgqd.pid
base_connstr = host=localhost user=postgres
initial_database = opscode_chef&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Теперь запускаем skytools и проверяем, что всё настроено верно:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@chef-master:~# service skytools start
root@chef-master:~# londiste3 /etc/skytools/replication_master.ini status
Queue: replica   Local node: master-server

master-server (root)
  |                           Tables: 0/0/0
  |                           Lag: 12s, Tick: 32
  +--slave-server (leaf)
                              Tables: 0/0/0
                              Lag: 12s, Tick: 32
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Видим, что у нас есть 2 сервера но пока ничего не реплицируется.
Добавляем необходимые таблицы:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@chef-master:~# londiste3 /etc/skytools/replication_master.ini add-table clients
root@chef-master:~# londiste3 /etc/skytools/replication_master.ini add-table nodes
root@chef-master:~# londiste3 /etc/skytools/replication_master.ini add-table osc_users
root@chef-master:~# londiste3 /etc/skytools/replication_slave.ini add-table nodes
root@chef-master:~# londiste3 /etc/skytools/replication_slave.ini add-table clients
root@chef-master:~# londiste3 /etc/skytools/replication_slave.ini add-table osc_users
root@chef-master:~# londiste3 /etc/skytools/replication_master.ini status
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Спустя несколько минут мы можем увидеть, что репликация завершилась:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Queue: replica   Local node: master-server

master-server (root)
  |                           Tables: 3/0/0
  |                           Lag: 14s, Tick: 52
  +--slave-server (leaf)
                              Tables: 3/0/0
                              Lag: 14s, Tick: 52
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Fri, 09 Aug 2013 11:16:00 +0000</pubDate>
        <link>https://cyberflow.net/2013/08/replication-chef-database.html</link>
        <guid isPermaLink="true">https://cyberflow.net/2013/08/replication-chef-database.html</guid>
        
        <category>debian</category>
        
        <category>postgresql</category>
        
        <category>skytools</category>
        
        <category>replication</category>
        
        <category>chef</category>
        
        
        <category>chef</category>
        
        <category>ha</category>
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>logstash, ротация логов в elasticsearch</title>
        <description>&lt;p&gt;Небольшая заметка как организовать ротацию логов, собирающихся при помощи &lt;a href=&quot;http://logstash.net/&quot;&gt;logstash&lt;/a&gt; в &lt;a href=&quot;http://www.elasticsearch.org/&quot;&gt;elasticsearch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;В крон добавляем:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cat &lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt;&#39;EOF&#39; &amp;gt; /etc/cron.daily/logstash
#!/bin/bash
logdate=$(date -d&#39;-15 days&#39; +&quot;%Y.%m.%d&quot;)
curl -XDELETE &quot;http://localhost:9200/logstash-${logdate}&quot;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Этот скрипт будет запускаться ежедневно и удалять все логи из elasticsearch 15-дневной давности.&lt;/p&gt;
</description>
        <pubDate>Fri, 31 May 2013 19:24:00 +0000</pubDate>
        <link>https://cyberflow.net/2013/05/logstash-rotate-logs-in-elasticsearch.html</link>
        <guid isPermaLink="true">https://cyberflow.net/2013/05/logstash-rotate-logs-in-elasticsearch.html</guid>
        
        <category>elasticsearch</category>
        
        <category>logs</category>
        
        <category>logstash</category>
        
        
        <category>notice</category>
        
        <category>linux</category>
        
        <category>elasticsearch</category>
        
      </item>
    
  </channel>
</rss>
